<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
 <script src="https://code.highcharts.com/stock/highstock.js"></script>
<script src="https://code.highcharts.com/stock/modules/exporting.js"></script>


<!-- Modal -->
<div class="modal fade" id="demo" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div class="modal-dialog modal-dialog-full" role="document">
    <div class="modal-content modal-content-full">
      <div class="modal-header modal-header-full">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
       
      </div>
      <div class="modal-body">
         <center><div id="container" style="width:95%; height:90%;"></div></center>
         <br>
          <div class="well"><p> <strong>Lorem Ipsum</strong> is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
</div>


<script type="text/javascript">
  $(function () {

    $('#demo').on('show.bs.modal', function () {
    $('.modal .modal-body').css('overflow-y', 'auto'); 
    $('.modal #container').css('height', $(window).height() * 0.95 );

    $('.modal .modal-body').css('min-height', $(window).height() * 1.2);
    });

    var ids =  ['2'];
    var base_url = window.location.origin;
    var adt_path = "/adt/api_get_adt_data/";
    var static_graph_path = "/category/api_get_sp_data/";

    function createChart() {

       window.chart = new Highcharts.StockChart({

            chart: {
                renderTo: "#container",
                
            },

            navigator: {
                enabled: false
            },
            
            exporting: {
                sourceWidth: 1600,
                sourceHeight: 800,

                // scale: 2 (default)
              
            },
            rangeSelector : {
                allButtonsEnabled: true,
                buttons: [{
                    type: 'month',
                    count: 1,
                    text: '1M',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                }, {
                    type: 'month',
                    count: 3,
                    text: '3M',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                },{
                    type: 'month',
                    count: 6,
                    text: '6M',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                },{
                    type: 'month',
                    count: 9,
                    text: '9M',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                },{
                    type: 'year',
                    count: 1,
                    text: '1Y',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                }, {
                    type: 'year',
                    count: 2,
                    text: '2Y',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                }, {
                    type: 'year',
                    count: 3,
                    text: '3Y',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                }, {
                    type: 'year',
                    count: 5,
                    text: '5Y',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                }],
                buttonTheme: {
                    width: 60
                },
                selected: 4
            },

            tooltip: {
                // positioner: function(boxWidth, boxHeight, point) {         
                //     return {x:point.plotX ,y:point.plotY+180};         
                // }
            },

            yAxis:[{
                labels: {
                    align: 'left',
                    x: -3
                },
                title: {formatter: function () {
                        return (this.value > 0 ? ' + ' : '') + this.value + '%';
                    }
                  },
                height: '50%',
                lineWidth: 2
            }, {

                  labels: {
                    align: 'left',
                    x: -3
                },
                //title: titleOptionsStatic,
                top: '60%',
                height: '40%',
                offset: 0,
                lineWidth: 2
            }],

            title: titleOptions,
            legend: {
                enabled: true, 
            },

            series: seriesOptions
        }, function(chart) {
            // apply the date pickers
            setTimeout(function() {
                $('input.highcharts-range-selector', $('#' + chart.options.chart.renderTo)).datepicker()
            }, 0)
        });

        // Set the datepicker's date format
        $.datepicker.setDefaults({
            dateFormat: 'yy-mm-dd',
            onSelect: function(dateText) {
                this.onchange();
                this.onblur();
            }
        });
    } 


    /***************  static graph fetching *************/

    $.getJSON(base_url + static_graph_path + "2",    function (data) {
       
        seriesOptions[0] = {
            type: 'candlestick',
            name: "S&P500",
            data: data,
            dataGrouping: {
                units: [ ['day', [1] ] ]
            }
        };


        /*************** graphs data **********************/

        $.each(ids, function (i, val) {

            //alert('http://www.highcharts.com/samples/data/jsonp.php?filename=' + name.toLowerCase() + '-c.json&callback=?');
            $.getJSON(base_url + adt_path + val,    function (data) {

                
                seriesOptions[i+1] = {
                    
                    name: "test",
                    data: data,
                    
                    yAxis:1,
                    dataGrouping: {
                        units: [ ['day', [1] ] ]
                    }
                };

                // As we're loading the data asynchronously, we don't know what order it will arrive. So
                // we keep a counter and create the chart when all the data is loaded.
                seriesCounter += 1;

                if (seriesCounter === ids.length) {

                    titleOptions = {
                        text: title,
                        style: {
                          color: '#333333',
                          font: '16px Arial',
                          fontWeight:'bold',
                        }
                    };
                    
                    createChart();
                }
            });
        });

    });
});
</script>
