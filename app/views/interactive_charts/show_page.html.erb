<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.12/css/jquery.dataTables.min.css">

<% content_for :head do %>
    <%= stylesheet_link_tag  'interactive_charts', media: 'all' %>
<% end %>


<div class="row">

	<div class="col-md-12">
      <table id="example" class="display" cellspacing="0" width="100%">
       <col width="400">
       <col width="300">
       <col width="300">
       <col width="100">
        <thead>
          <tr>
              <th>Indicator</th>
              <th>Category</th>
              <th>Period</th>
              <th >spids</th>
              <th >adtids</th>
              <th >adtcolors</th>
              <th >y_legends</th>
              <th >graph_types</th>
              <th >graph_definition</th>
              <th></th>
          </tr>
        </thead>
        <tbody>
        <% @graphs.each do |graph| %>
          <tr>
            <td><%= graph.name %></td>
            <td><%= graph.category.try(:name) %></td>
            <td><%= graph.period %></td>
            <td ><%= graph.category.try(:id) %></td>
            <td ><%= graph.adts.order('id asc').pluck(:id).map(&:to_s).join(", ")%></td>
            <td ><%= graph.adts.order('id asc').pluck(:color_y).map(&:to_s).join(", ")%></td>
            <td ><%= graph.adts.order('id asc').pluck(:y_legend).map(&:to_s).join(", ")%></td>
            <td ><%= graph.adts.order('id asc').pluck(:graph_type).map(&:to_s).join(", ")%></td>
             <td ><%= graph.definition.html_safe rescue 'definition not found' %></td>
            <td><center>
            <a href = "#" data-toggle="modal" class="btn btn-default btn-xs" data-target="#demo"><i class="fa fa-line-chart" aria-hidden="true"></i> See Chart </a>
            </center></td>
          </tr>
        <% end %>
        </tbody>
        </table>
	</div>
</div>
<br>
<br>
<br>


<%= render :partial => "chart_modal" %>


<script type="text/javascript" src="https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>

<script type="text/javascript">
  $(function () {
   
    var seriesOptions = [];
    var seriesCounter = 0;
    var sp_id ;
    
    var base_url = window.location.origin;
    var adt_path = "/adt/api_get_adt_data/";
    var static_graph_path = "/category/api_get_sp_data/";

    var table = $('#example').DataTable( {
        "lengthMenu": [[10, 25, 50,100, -1], [10, 25, 50,100, "All"]],
        "aoColumnDefs": [
            { "bSortable": false, "aTargets": [ 9 ] 
            },
            {
                "targets": [ 3 ],
                "visible": false,
                "searchable": false
            },

            {
                "targets": [ 4 ],
                "visible": false,
                "searchable": false
            },
            {
                "targets": [ 5 ],
                "visible": false,
                "searchable": false
            },

            {
                "targets": [ 6 ],
                "visible": false,
                "searchable": false
            },
            {
                "targets": [ 7 ],
                "visible": true,
                "searchable": false
            },
            
            {
                "targets": [ 8 ],
                "visible": false,
                "searchable": false
            }
        ]
        
        
    } );

    $('#demo').on('show.bs.modal', function () {
      $('.modal .modal-body').css('overflow-y', 'auto'); 
      $('.modal #container').css('height', $(window).height() * 0.95 );

      $('.modal .modal-body').css('min-height', $(window).height() * 1.2);

      

      if (window.chart){
          window.chart.redraw();
      }
    });

    $('#demo').on('hidden.bs.modal', function () { 
       //$(this).data('bs.modal', null);
       //$("#container").html('');
       $("#container_processor").show();
    });

    $('#example tbody').on( 'click', 'tr', function () {

       seriesOptions = [];
       seriesCounter = 0;
       
        var d      = table.row( this ).data();
        sp_id      =  d[3];
        var ids    =  d[4].split(',');
        var colors =  d[5].split(',');
        var legends =  d[6].split(',');
        var graph_types =  d[7].split(',');
        var graph_definition = d[8].replace(/&amp;/g, '&');
        var graph_name = d[0].replace(/&amp;/g, '&');

        $("#graph_definition").html("<p>"+graph_definition +"</p>");
    /***************  static graph fetching *************/

    $.getJSON(base_url + static_graph_path + sp_id,    function (data) {
       
        seriesOptions[0] = {
            type: 'candlestick',
            name: "S&P500",
            data: data,
            dataGrouping: {
                units: [ ['day', [1] ] ]
            }
        };


        /*************** graphs data **********************/

        $.each(ids, function (i, val) {
          //alert(val);
            //alert('http://www.highcharts.com/samples/data/jsonp.php?filename=' + name.toLowerCase() + '-c.json&callback=?');
            $.getJSON(base_url + adt_path + val,    function (data) {

                if (!graph_types[i]){
                    graph_types[i] = 'line'
                }

                seriesOptions[i+1] = {
                    
                    name: legends[i],
                    data: data,
                    color: colors[i],
                    type: graph_types[i],
                    yAxis:1,
                    dataGrouping: {
                        units: [ ['day', [1] ] ]
                    }
                };

                // As we're loading the data asynchronously, we don't know what order it will arrive. So
                // we keep a counter and create the chart when all the data is loaded.
                seriesCounter += 1;

                if (seriesCounter === ids.length) {

                    titleOptions = {
                        text: graph_name,
                        style: {
                          color: '#333333',
                          font: '16px Arial',
                          fontWeight:'bold',
                        }
                    };
                    
                    //if (window.chart) { window.chart.redraw();}else{
                    createChart();
                    $("#container_processor").hide();
                    //};
                }
            });
        });

      });
    });




    function createChart() {
          
       window.chart = new Highcharts.StockChart({

            chart: {
                renderTo: "container",

            },

            navigator: {
                enabled: false
            },
            
            exporting: {
                sourceWidth: 1600,
                sourceHeight: 800,

                // scale: 2 (default)
              
            },
            rangeSelector : {
                allButtonsEnabled: true,
                buttons: [{
                    type: 'month',
                    count: 1,
                    text: '1M',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                }, {
                    type: 'month',
                    count: 3,
                    text: '3M',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                },{
                    type: 'month',
                    count: 6,
                    text: '6M',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                },{
                    type: 'month',
                    count: 9,
                    text: '9M',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                },{
                    type: 'year',
                    count: 1,
                    text: '1Y',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                }, {
                    type: 'year',
                    count: 2,
                    text: '2Y',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                }, {
                    type: 'year',
                    count: 3,
                    text: '3Y',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                }, {
                    type: 'year',
                    count: 5,
                    text: '5Y',
                    dataGrouping: {
                        forced: true,
                        units: [['day', [1]]]
                    }
                }],
                buttonTheme: {
                    width: 60
                },
                selected: 4
            },

            tooltip: {
                // positioner: function(boxWidth, boxHeight, point) {         
                //     return {x:point.plotX ,y:point.plotY+180};         
                // }
            },

            yAxis:[{
                labels: {
                    align: 'left',
                    x: -3
                },
                title: {formatter: function () {
                        return (this.value > 0 ? ' + ' : '') + this.value + '%';
                    }
                  },
                height: '50%',
                lineWidth: 2
            }, {

                  labels: {
                    align: 'left',
                    x: -3
                },
                //title: titleOptionsStatic,
                top: '60%',
                height: '40%',
                offset: 0,
                lineWidth: 2
            }],

            title: titleOptions,
            legend: {
                enabled: true, 
            },

            series: seriesOptions
        });
    } 
});
</script>